

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}





model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  title String
  desc String
  price Int
  bedroom Int
  bathroom Int
  address String
  latitude String
  longitude String
  city String
  image String[]
  userId String @db.ObjectId
  user User @relation(fields: [userId],references: [id])
  type Type
}

enum Type{
  buy
  rent
}

model User{
 id String @id @default(auto()) @map("_id") @db.ObjectId
 createdAt DateTime @default(now())
 username String @unique
 email String @unique
 password String
 img String
 isAdmin Boolean @default(false)
 product Product[]
 chat Chat[] @relation(fields: [chatIds],references: [id])
 chatIds String[] @db.ObjectId
 order Order[]
}

model Chat {
  id String @id  @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  user User[] @relation(fields: [userIds],references: [id])
  userIds String[]  @db.ObjectId 
  seenBy String[]
  message Message[]
  lastMessage String?

   @@index([userIds])
}
model Message{
 id String @id  @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  text String  
  userId String  
  chat Chat @relation(fields: [chatId],references: [id])
  chatId String @db.ObjectId
}  


model Order{
   id String @id  @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  product Json[]
  status String
  intent_id String? @unique
  price Int
  userEmail String 
  user User @relation(fields: [userEmail],references: [email])

}